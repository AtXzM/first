import java.util.*;

public class m1 {
    static int dp[][];
    static int n;
    static char f[];
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        String str=sc.next();
        n=str.length();
        dp=new int[str.length()][11];
        for(int i=0;i<str.length();i++){
            Arrays.fill(dp[i],-1);
        }
        f=str.toCharArray();
        // for(int i=1;i<str.length();i++){
        //     for(int j=0;j<=9;j++){
        //         if(s[i]-'0'==pre){

        //         }
        //     }
        //     if(s[i-1]==s[i])
        // }342

System.out.println(dfs(0,10));
    }
    static int dfs(int i,int pre){
        if(i==n)return 0;
        if(dp[i][pre]!=-1)return dp[i][pre];
        int min=1000000;
        if(pre==f[i]-'0'){
            for(int t=0;t<=9;t++){
                if(t==pre)continue;
                min=Math.min(dfs(i+1,t)+1,min);
            }
            return dp[i][pre]=min;
        }else{
            for(int t=0;t<=9;t++){
                if(t==pre)continue;
                if(t==f[i]-'0'){
                    min=Math.min(min,dfs(i+1,t));
                }
                else min=Math.min(dfs(i+1,t)+1,min);
            }
            return dp[i][pre]= min;
        }

    }
}
